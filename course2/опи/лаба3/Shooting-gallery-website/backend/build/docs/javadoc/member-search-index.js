memberSearchIndex = [{"p":"com.example.backend.auth.jwt","c":"TokensPair","l":"accessToken()"},{"p":"com.example.backend.points.mongodb","c":"PointMongodbManger","l":"addPoint(Point)","u":"addPoint(com.example.backend.points.Point)"},{"p":"com.example.backend.auth.mongodb","c":"UserMongodbManager","l":"addUser(User)","u":"addUser(com.example.backend.auth.User)"},{"p":"com.example.backend.auth","c":"AuthController","l":"AuthController()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth","c":"AuthService","l":"AuthService()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth","c":"AuthService","l":"checkUser(String)","u":"checkUser(java.lang.String)"},{"p":"com.example.backend.points","c":"PointsFactory","l":"createNewPoint(double, double, double, User)","u":"createNewPoint(double,double,double,com.example.backend.auth.User)"},{"p":"com.example.backend.points","c":"PointsService","l":"createPoint(double, double, double, String)","u":"createPoint(double,double,double,java.lang.String)"},{"p":"com.example.backend.points","c":"PointsController","l":"createPoint(String, JsonNode)","u":"createPoint(java.lang.String,com.fasterxml.jackson.databind.JsonNode)"},{"p":"com.example.backend.auth","c":"AuthService","l":"createUser(String, String)","u":"createUser(java.lang.String,java.lang.String)"},{"p":"com.example.backend.utils.exceptions","c":"DatastoreInitException","l":"DatastoreInitException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.backend.utils.mongodb","c":"DatastoreSingletone","l":"DatastoreSingletone()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth","c":"AuthService","l":"deleteUser(String)","u":"deleteUser(java.lang.String)"},{"p":"com.example.backend.auth.mongodb","c":"UserMongodbManager","l":"deleteUser(User)","u":"deleteUser(com.example.backend.auth.User)"},{"p":"com.example.backend.auth.jwt","c":"TokensPair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.example.backend.utils.dtos","c":"ErrorDTO","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.example.backend.utils.dtos","c":"RespOneParameterDTO","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.example.backend.utils.dtos","c":"ErrorDTO","l":"error()"},{"p":"com.example.backend.utils.dtos","c":"ErrorDTO","l":"ErrorDTO(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.backend.auth.jwt","c":"JwtAuthenticationFilter","l":"filter(ContainerRequestContext)","u":"filter(jakarta.ws.rs.container.ContainerRequestContext)"},{"p":"com.example.backend.auth.jwt","c":"JwtUtil","l":"generateTokensByUser(User)","u":"generateTokensByUser(com.example.backend.auth.User)"},{"p":"com.example.backend.utils.exceptions","c":"GenerateTokensException","l":"GenerateTokensException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.backend.webApp","c":"MainApp","l":"getClasses()"},{"p":"com.example.backend.points.mongodb","c":"PointMongodbManger","l":"getCountPointsByUser(User)","u":"getCountPointsByUser(com.example.backend.auth.User)"},{"p":"com.example.backend.points","c":"PointsService","l":"getCountPointsByUsername(String)","u":"getCountPointsByUsername(java.lang.String)"},{"p":"com.example.backend.points","c":"PointsController","l":"getPointsCount(String)","u":"getPointsCount(java.lang.String)"},{"p":"com.example.backend.points","c":"PointsController","l":"getPointsSlice(JsonNode, String)","u":"getPointsSlice(com.fasterxml.jackson.databind.JsonNode,java.lang.String)"},{"p":"com.example.backend.points.mongodb","c":"PointMongodbManger","l":"getPointsSlice(User, long, long)","u":"getPointsSlice(com.example.backend.auth.User,long,long)"},{"p":"com.example.backend.points","c":"PointsService","l":"getSlicePoints(String, long, long)","u":"getSlicePoints(java.lang.String,long,long)"},{"p":"com.example.backend.auth.mongodb","c":"UserMongodbManager","l":"getUserByUsername(String)","u":"getUserByUsername(java.lang.String)"},{"p":"com.example.backend.utils.mongodb","c":"DatastoreSingletone","l":"getUserDatastore()"},{"p":"com.example.backend.auth.jwt","c":"JwtUtil","l":"getUsernameFromToken(String)","u":"getUsernameFromToken(java.lang.String)"},{"p":"com.example.backend.auth.jwt","c":"TokensPair","l":"hashCode()"},{"p":"com.example.backend.utils.dtos","c":"ErrorDTO","l":"hashCode()"},{"p":"com.example.backend.utils.dtos","c":"RespOneParameterDTO","l":"hashCode()"},{"p":"com.example.backend.utils.exceptions","c":"InvalidRadiusException","l":"InvalidRadiusException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.backend.auth.jwt","c":"JwtAuthenticationFilter","l":"JwtAuthenticationFilter()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth.jwt","c":"JwtUtil","l":"JwtUtil()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth","c":"AuthService","l":"login(String, String)","u":"login(java.lang.String,java.lang.String)"},{"p":"com.example.backend.auth","c":"AuthController","l":"logout(String)","u":"logout(java.lang.String)"},{"p":"com.example.backend.auth","c":"AuthService","l":"logout(String)","u":"logout(java.lang.String)"},{"p":"com.example.backend.webApp","c":"MainApp","l":"MainApp()","u":"%3Cinit%3E()"},{"p":"com.example.backend.points","c":"Point","l":"Point()","u":"%3Cinit%3E()"},{"p":"com.example.backend.points.mongodb","c":"PointMongodbManger","l":"PointMongodbManger()","u":"%3Cinit%3E()"},{"p":"com.example.backend.points","c":"PointsController","l":"PointsController()","u":"%3Cinit%3E()"},{"p":"com.example.backend.points","c":"PointsFactory","l":"PointsFactory()","u":"%3Cinit%3E()"},{"p":"com.example.backend.points","c":"PointsService","l":"PointsService()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth","c":"AuthController","l":"refresh(String)","u":"refresh(java.lang.String)"},{"p":"com.example.backend.auth.jwt","c":"TokensPair","l":"refreshToken()"},{"p":"com.example.backend.auth","c":"AuthService","l":"refreshToken(String)","u":"refreshToken(java.lang.String)"},{"p":"com.example.backend.auth","c":"AuthController","l":"register(JsonNode)","u":"register(com.fasterxml.jackson.databind.JsonNode)"},{"p":"com.example.backend.utils.dtos","c":"RespOneParameterDTO","l":"RespOneParameterDTO(T)","u":"%3Cinit%3E(T)"},{"p":"com.example.backend.utils.dtos","c":"RespOneParameterDTO","l":"result()"},{"p":"com.example.backend.auth","c":"AuthController","l":"signIn(JsonNode)","u":"signIn(com.fasterxml.jackson.databind.JsonNode)"},{"p":"com.example.backend.auth","c":"TestingDiff","l":"TestingDiff()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth.jwt","c":"TokensPair","l":"TokensPair(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.example.backend.auth.jwt","c":"TokensPair","l":"toString()"},{"p":"com.example.backend.utils.dtos","c":"ErrorDTO","l":"toString()"},{"p":"com.example.backend.utils.dtos","c":"RespOneParameterDTO","l":"toString()"},{"p":"com.example.backend.auth.mongodb","c":"UserMongodbManager","l":"updateUser(User)","u":"updateUser(com.example.backend.auth.User)"},{"p":"com.example.backend.auth","c":"User","l":"User()","u":"%3Cinit%3E()"},{"p":"com.example.backend.auth.mongodb","c":"UserMongodbManager","l":"UserMongodbManager()","u":"%3Cinit%3E()"},{"p":"com.example.backend.utils.exceptions","c":"UserNotFoundException","l":"UserNotFoundException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.backend.auth.jwt","c":"JwtUtil","l":"verifyToken(String)","u":"verifyToken(java.lang.String)"}];updateSearchResults();